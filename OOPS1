// class Pen {
//     String color;
//     String type;

//     public void write() {
//         System.out.println("Writing something");
//     }

//     public void printColor() {
//         System.out.println(this.color);
//     }
// }

class Student {
    String name;
    int age;

    public void printInfo() {
        System.out.println(this.name);
        System.out.println(this.age);
    }
    // Constructor : Constructor is a special method which is invoked automatically
    // at the time of object creation. It is used to initialize the data members of
    // new objects generally.
    // Constructors have the same name as class or structure.
    // Constructors donâ€™t have a return type. (Not even void)
    // Constructors are only called once, at object creation.

    // 1. Non-Parameterized constructor :
    Student() {
        System.out.println("Constructor called");
    }

    // 2. Parameterized constructor :
    // Student(String name, int age) {
    // this.name = name;
    // this.age = age;
    // }

    // 3. Copy Constructor :
    Student(Student s2) {
        this.name = s2.name;
        this.age = s2.age;
    }
}

public class OOPS1 {
    public static void main(String[] args) {
        // Pen pen1 = new Pen();
        // pen1.color = "blue";
        // pen1.type = "gel";
        // pen1.write();
        // pen1.printColor();
        // Pen pen2 = new Pen();
        // pen2.color = "black";
        // pen2.printColor();

        // Student s1 = new Student();
        // s1.name = "Riya";
        // s1.age = 22;
        // s1.printInfo();

        // 2. Parameterized constructor called:
        // Student s2 = new Student("Riya", 24);
        // s2.printInfo();

        // 3. Copy Constructor :
        Student s1 = new Student();
        s1.name = "Riya";
        s1.age = 23;

        Student s2 = new Student(s1);
        s2.printInfo();

    }
}
